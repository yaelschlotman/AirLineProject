//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.SampleDataSource
{
    using System; 
    using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
    internal class SampleDataSource { }
#else

    public class SampleDataSource : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        public SampleDataSource()
        {
            try
            {
                Uri resourceUri = new Uri("/AirLineProject;component/SampleData/SampleDataSource/SampleDataSource.xaml", UriKind.RelativeOrAbsolute);
                System.Windows.Application.LoadComponent(this, resourceUri);
            }
            catch
            {
            }
        }

        private Flight_Data _Flight_Data = new Flight_Data();

        public Flight_Data Flight_Data
        {
            get
            {
                return this._Flight_Data;
            }
        }
    }

    public class Flight_DataItem : INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if (this.PropertyChanged != null)
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private double _Flight_Number = 0;

        public double Flight_Number
        {
            get
            {
                return this._Flight_Number;
            }

            set
            {
                if (this._Flight_Number != value)
                {
                    this._Flight_Number = value;
                    this.OnPropertyChanged("Flight_Number");
                }
            }
        }

        private string _Destination = string.Empty;

        public string Destination
        {
            get
            {
                return this._Destination;
            }

            set
            {
                if (this._Destination != value)
                {
                    this._Destination = value;
                    this.OnPropertyChanged("Destination");
                }
            }
        }

        private string _Origin = string.Empty;

        public string Origin
        {
            get
            {
                return this._Origin;
            }

            set
            {
                if (this._Origin != value)
                {
                    this._Origin = value;
                    this.OnPropertyChanged("Origin");
                }
            }
        }
    }

    public class Flight_Data : System.Collections.ObjectModel.ObservableCollection<Flight_DataItem>
    { 
    }
#endif
}
